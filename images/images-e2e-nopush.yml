# Image build and validate e2e

trigger:
  branches:
    include:
    - master
    - releases/*

jobs:
- job: docker_image_build
  displayName: Build and Push CI Images To Dogfood repo
  strategy:
    matrix:
      Ubuntu_1804:
        DockerFile_Path: images/debian/1804/Dockerfile
        repository: brmclare/oesdk-ubuntu1804-dogfood
        pool: 1804CISGXagentspool
        vmImage:
      Ubuntu_1604:
        DockerFile_Path: images/debian/1804/Dockerfile
        repository: brmclare/oesdk-ubuntu1604-dogfood
        pool: 1804CISGXagentspool
        vmImage:
      Windows_2019:
        DockerFile_Path: images/windows/2019/Dockerfile
        repository: brmclare/oesdk-windows2019-dogfood
        pool:
        vmImage: windows-latest
    maxParallel: 99
  # TODO:// only use pools. Workaround in place due to lack of Docker in the Ci Agents for Windows
  pool:
      name: $(pool)
      vmImage: $(vmImage)
  workspace:
    clean: all 
  #container: containerReference # container to run this job inside
  timeoutInMinutes: 60
  steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'brmclareDockerHub'
        repository: '$(repository)'
        command: 'buildAndPush'
        Dockerfile: '$(DockerFile_Path)'
        buildContext: '.'
        tags: |
          $(Build.BuildId)
- job: docker_image_validate
  dependsOn: docker_image_build
  displayName: Validate Images from Dogfood repo
  strategy:
    matrix:
      Ubuntu_1804:
        dockerimage: brmclare/oesdk-ubuntu1804-dogfood
        pool: 1804CISGXagentspool
        options: -it --device /dev/sgx:/dev/sgx
        validation: images/debian/validate.sh
      Ubuntu_1604:
        dockerimage: brmclare/oesdk-ubuntu1604-dogfood
        pool: 1804CISGXagentspool
        options: -it --device /dev/sgx:/dev/sgx
        validation: images/debian/validate.sh
      #Windows_2019:
        #dockerimage: brmclare/oesdk-windows2019-dogfood
        #pool: 
        #options: -it --device="class/17eaf82e-e167-4763-b569-5b8273cef6e1"
        #validation: images/windows/validate.cmd
    maxParallel: 99
  pool:
      name: $(pool)
  container: 
    image: $(dockerimage):$(Build.BuildId)
    options: $(options)
  steps:
    - script: $(validation)
